name: Pull Request Dev to Main

on:
  # Aciona a pipeline em pull requests aprovados para a branch main
  pull_request_review:
    types: [submitted]
    branches:
      - main

jobs:
  approved-pull-request:
    if: github.event.review.state == 'approved' && github.event.pull_request.head.ref == 'dev'
    runs-on: ubuntu-latest # Máquina virtual Ubuntu que executa o job

    steps:
      - run: echo "This Pull Request was Approved!"

      # Checkout do código do pull request
      - name: Checkout code
        uses: actions/checkout@v2

      # Configuração do Python com a versão 3 ou superior
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: "3.x"

      # Instalar dependências
      - name: Install dependencies
        run: |
          python -m venv venv
          source venv/bin/activate
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      # Executar os testes de integração
      - name: Run integration _tests_
        run: |
          source venv/bin/activate
          python -m unittest discover -s tests

      # Notificar caso o teste falhe
      - name: Notify failure
        if: failure()
        run: echo "Integration _tests_ failed. Please check the logs."

      - name: Merge pull request
        if: success()
        run: echo "Merging pull request."
        
 #função que executa o merge do pull request apos approved-pull-request tiver exito
  automerge:
    name: Merge Pull Request
    runs-on: [ubuntu-latest]
    needs: [approved-pull-request]
    steps:
      - name: Merge
        uses: actions/github-script@0.2.0
        with:
          github-token: ${{ secrets.TOKEN_ACCESS }}
          script: |
            github.pullRequests.merge ({
              owner: context.payload.repository.owner.login,
              repo: context.payload.repository.name,
              pull_number: context.payload.pull_request.number
            })
